<<<<<<< HEAD
[{"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/App.tsx":"1","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/index.tsx":"2","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/Route.tsx":"3","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/services/api.ts":"4","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Dashboard/index.tsx":"5","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/styles.ts":"6","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/utils/getValidationErrors.ts":"7","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/index.tsx":"8","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/index.tsx":"9","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/index.tsx":"10","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/reportWebVitals.ts":"11","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/hooks/auth.tsx":"12","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/index.tsx":"13","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/index.tsx":"14","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Input/styles.ts":"15","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/styles.ts":"16","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/styles/global.ts":"17","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/index.tsx":"18","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/styles.ts":"19","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/styles.ts":"20","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/styles.ts":"21","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Checkbox/styles.ts":"22","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Checkbox/index.tsx":"23","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Quizzes/styles.ts":"24"},{"size":355,"mtime":1607195623130,"results":"25","hashOfConfig":"26"},{"size":564,"mtime":1607372557792,"results":"27","hashOfConfig":"26"},{"size":832,"mtime":1607195623130,"results":"28","hashOfConfig":"26"},{"size":116,"mtime":1607195623134,"results":"29","hashOfConfig":"26"},{"size":244,"mtime":1607338154781,"results":"30","hashOfConfig":"26"},{"size":843,"mtime":1607195623130,"results":"31","hashOfConfig":"26"},{"size":320,"mtime":1607195623134,"results":"32","hashOfConfig":"26"},{"size":365,"mtime":1607460100029,"results":"33","hashOfConfig":"26"},{"size":1525,"mtime":1607195623130,"results":"34","hashOfConfig":"26"},{"size":1196,"mtime":1607195623130,"results":"35","hashOfConfig":"26"},{"size":425,"mtime":1607195623130,"results":"36","hashOfConfig":"26"},{"size":1700,"mtime":1607338154781,"results":"37","hashOfConfig":"26"},{"size":2297,"mtime":1607338154781,"results":"38","hashOfConfig":"26"},{"size":769,"mtime":1607203592430,"results":"39","hashOfConfig":"26"},{"size":1216,"mtime":1607195623130,"results":"40","hashOfConfig":"26"},{"size":1182,"mtime":1607338154781,"results":"41","hashOfConfig":"26"},{"size":468,"mtime":1607195623134,"results":"42","hashOfConfig":"26"},{"size":3692,"mtime":1607195623130,"results":"43","hashOfConfig":"26"},{"size":850,"mtime":1607195623130,"results":"44","hashOfConfig":"26"},{"size":786,"mtime":1607195623130,"results":"45","hashOfConfig":"26"},{"size":1230,"mtime":1607195623130,"results":"46","hashOfConfig":"26"},{"size":849,"mtime":1607470514203,"results":"47","hashOfConfig":"26"},{"size":456,"mtime":1607464955046,"results":"48","hashOfConfig":"26"},{"size":1225,"mtime":1607470903655,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"17tepdn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/App.tsx",[],["105","106","107","108","109"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/Route.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/services/api.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Dashboard/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/utils/getValidationErrors.ts",[],["110","111","112","113","114"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/index.tsx",["115"],"import React, { useState } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiBookOpen, FiAward } from 'react-icons/fi';\nimport Button from '../../../components/Button';\nimport {\n  Container,\n  TypeCard,\n  Title,\n  CardsContainer,\n  CardTitle,\n} from './styles';\n\ninterface SelectUserTypeProps {\n  selected: 'student' | 'teacher' | '';\n  onChange(newUserType: 'student' | 'teacher' | ''): void;\n  onSubmit(): void;\n}\n\ninterface UserTypes {\n  title: string;\n  value: 'student' | 'teacher' | '';\n  icon: IconBaseProps;\n}\n\nconst SelectUserType: React.FC<SelectUserTypeProps> = ({\n  selected,\n  onChange,\n  onSubmit,\n}) => {\n  const [userTypes, setUserTypes] = useState<UserTypes[]>([\n    {\n      title: 'Professor',\n      value: 'teacher',\n      icon: <FiBookOpen size={70} />,\n    },\n    {\n      title: 'Aluno',\n      value: 'student',\n      icon: <FiAward size={70} />,\n    },\n  ]);\n\n  return (\n    <Container>\n      <Title>Escolha seu tipo de usuário</Title>\n      <CardsContainer>\n        {userTypes &&\n          userTypes.map(userType => (\n            <TypeCard\n              key={userType.value}\n              selected={selected === userType.value}\n              onClick={() => onChange(userType.value)}\n            >\n              <CardTitle>{userType.title}</CardTitle>\n              {userType.icon}\n            </TypeCard>\n          ))}\n      </CardsContainer>\n      <Button type=\"button\" onClick={onSubmit}>\n        Próximo\n      </Button>\n    </Container>\n  );\n};\n\nexport default SelectUserType;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/index.tsx",[],["116","117","118","119","120"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/reportWebVitals.ts",["121"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/hooks/auth.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/index.tsx",["122"],"import React, { useCallback, useRef } from 'react';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport { Link } from 'react-router-dom';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { Container, Content } from './styles';\n\ninterface ISignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ISignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        console.log(err);\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Erro na autenticação',\n            description:\n              'Ocorreu um erro ao fazer login, cheque as credenciais',\n          });\n        }\n      }\n    },\n    [signIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Entrar</h1>\n          <Input name=\"email\" type=\"text\" placeholder=\"E-mail\" />\n          <Input name=\"password\" type=\"password\" placeholder=\"Senha\" />\n          <Button color=\"primary\" type=\"submit\">\n            Entrar\n          </Button>\n        </Form>\n\n        <Link to=\"signup\">\n          <FiLogIn />\n          Criar conta\n        </Link>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/index.tsx",["123"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Input/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/styles/global.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/index.tsx",["124","125"],"import React, { useCallback, useState, useRef } from 'react';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport SelectUserType from './SelectUserType';\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport { Container, FormContent } from './styles';\n\ntype SelectedUserType = 'teacher' | 'student' | '';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const [selectedUserType, setSelectedUserType] = useState<SelectedUserType>(\n    '',\n  );\n\n  const [userTypeSubmited, setUserTypeSubmited] = useState(false);\n\n  const handleSubmitUserType = useCallback(() => {\n    if (selectedUserType === '') {\n      addToast({\n        type: 'error',\n        title: 'Selecione um tipo de usuário',\n      });\n    } else {\n      setUserTypeSubmited(true);\n    }\n  }, [selectedUserType, addToast]);\n\n  const handleSelectAnotherUserType = useCallback(() => {\n    setUserTypeSubmited(false);\n    setSelectedUserType('');\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().min(6, 'No mínimo 6 digitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        console.log(selectedUserType);\n\n        await api.post('/users', {\n          ...data,\n          type: selectedUserType,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado',\n          description: 'Você já pode fazer seu logon no GoBarber',\n        });\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Erro no cadastro',\n            description: err.error,\n          });\n        }\n      }\n    },\n    [addToast, history, selectedUserType],\n  );\n\n  const onChangeUserType = useCallback((newUserType: SelectedUserType) => {\n    setSelectedUserType(newUserType);\n  }, []);\n\n  return (\n    <Container>\n      {userTypeSubmited ? (\n        <FormContent>\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h2>Faça seu cadastro</h2>\n\n            <Input name=\"name\" type=\"text\" placeholder=\"Nome\" />\n\n            <Input name=\"email\" type=\"text\" placeholder=\"E-mail\" />\n\n            <Input name=\"password\" type=\"password\" placeholder=\"Senha\" />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <button type=\"button\" onClick={handleSelectAnotherUserType}>\n            <FiArrowLeft />\n            Escolher outro tipo de usuário\n          </button>\n        </FormContent>\n      ) : (\n        <SelectUserType\n          selected={selectedUserType}\n          onChange={onChangeUserType}\n          onSubmit={handleSubmitUserType}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Checkbox/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Checkbox/index.tsx",["126"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Quizzes/styles.ts",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"129","replacedBy":"138"},{"ruleId":"131","replacedBy":"139"},{"ruleId":"133","replacedBy":"140"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":30,"column":21,"nodeType":"144","messageId":"145","endLine":30,"endColumn":33},{"ruleId":"127","replacedBy":"146"},{"ruleId":"129","replacedBy":"147"},{"ruleId":"131","replacedBy":"148"},{"ruleId":"133","replacedBy":"149"},{"ruleId":"135","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":3,"column":25,"nodeType":"153","messageId":"154","endLine":3,"endColumn":57},{"ruleId":"155","severity":1,"message":"156","line":50,"column":9,"nodeType":"157","messageId":"158","endLine":50,"endColumn":20},{"ruleId":"142","severity":1,"message":"159","line":5,"column":25,"nodeType":"144","messageId":"145","endLine":5,"endColumn":33},{"ruleId":"142","severity":1,"message":"160","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":72,"column":9,"nodeType":"157","messageId":"158","endLine":72,"endColumn":20},{"ruleId":"142","severity":1,"message":"161","line":10,"column":55,"nodeType":"144","messageId":"145","endLine":10,"endColumn":63},"lines-around-directive",["162"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["162"],[],[],[],[],"@typescript-eslint/no-unused-vars","'setUserTypes' is assigned a value but never used.","Identifier","unusedVar",["162"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-console","Unexpected console statement.","MemberExpression","unexpected","'useToast' is defined but never used.","'Link' is defined but never used.","'children' is defined but never used.","padding-line-between-statements"]
=======
[{"/home/vinicius/www/faculdade/tae/frontend/src/routes/Route.tsx":"1"},{"size":832,"mtime":1607205615738,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qw5a4r","/home/vinicius/www/faculdade/tae/frontend/src/routes/Route.tsx",[]]
>>>>>>> 0599a1624f681a36fd219f8810a34bd141148973
