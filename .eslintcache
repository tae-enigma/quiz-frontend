[{"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Quizzes/styles.ts":"1","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/reportWebVitals.ts":"2","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/hooks/index.tsx":"3","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/hooks/auth.tsx":"4","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/Route.tsx":"5","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Dashboard/index.tsx":"6","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Quizzes/index.tsx":"7","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/styles.ts":"8","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/index.tsx":"9","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/index.tsx":"10","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/styles.ts":"11","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/styles.ts":"12","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/styles.ts":"13","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/styles/global.ts":"14","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/index.tsx":"15","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/services/api.ts":"16","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/index.tsx":"17","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Input/index.tsx":"18","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/index.tsx":"19","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/index.tsx":"20","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/App.tsx":"21","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/index.tsx":"22","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/styles.ts":"23","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/OptionButton/index.tsx":"24","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/OptionButton/styles.ts":"25","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/styles.ts":"26","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/utils/getValidationErrors.ts":"27"},{"size":1250,"mtime":1607628945461,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1607195623130,"results":"30","hashOfConfig":"29"},{"size":271,"mtime":1607195623130,"results":"31","hashOfConfig":"29"},{"size":1700,"mtime":1607338154781,"results":"32","hashOfConfig":"29"},{"size":832,"mtime":1607195623130,"results":"33","hashOfConfig":"29"},{"size":244,"mtime":1607338154781,"results":"34","hashOfConfig":"29"},{"size":2145,"mtime":1607726074574,"results":"35","hashOfConfig":"29"},{"size":843,"mtime":1607195623130,"results":"36","hashOfConfig":"29"},{"size":769,"mtime":1607203592430,"results":"37","hashOfConfig":"29"},{"size":365,"mtime":1607460100029,"results":"38","hashOfConfig":"29"},{"size":850,"mtime":1607195623130,"results":"39","hashOfConfig":"29"},{"size":1230,"mtime":1607195623130,"results":"40","hashOfConfig":"29"},{"size":1182,"mtime":1607338154781,"results":"41","hashOfConfig":"29"},{"size":468,"mtime":1607195623134,"results":"42","hashOfConfig":"29"},{"size":556,"mtime":1607471475491,"results":"43","hashOfConfig":"29"},{"size":116,"mtime":1607195623134,"results":"44","hashOfConfig":"29"},{"size":2297,"mtime":1607338154781,"results":"45","hashOfConfig":"29"},{"size":1557,"mtime":1607195623130,"results":"46","hashOfConfig":"29"},{"size":1196,"mtime":1607195623130,"results":"47","hashOfConfig":"29"},{"size":1525,"mtime":1607623024601,"results":"48","hashOfConfig":"29"},{"size":355,"mtime":1607195623130,"results":"49","hashOfConfig":"29"},{"size":3692,"mtime":1607195623130,"results":"50","hashOfConfig":"29"},{"size":162,"mtime":1607195623130,"results":"51","hashOfConfig":"29"},{"size":503,"mtime":1607726343803,"results":"52","hashOfConfig":"29"},{"size":607,"mtime":1607726410557,"results":"53","hashOfConfig":"29"},{"size":786,"mtime":1607195623130,"results":"54","hashOfConfig":"29"},{"size":320,"mtime":1607195623134,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17tepdn",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Quizzes/styles.ts",[],["119","120","121","122","123"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/reportWebVitals.ts",["124"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",["125","126","127","128","129"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/hooks/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/hooks/auth.tsx",[],["130","131","132","133","134"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/Route.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Dashboard/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/Quizzes/index.tsx",["135","136"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/index.tsx",["137"],"import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { Container } from './styles';\nimport { IToastMessage, useToast } from '../../hooks/toast';\nimport Toast from './Toast';\n\ninterface IProps {\n  messages: IToastMessage[];\n}\n\nconst ToastContainer: React.FC<IProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    message => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} style={props} message={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n",["138","139","140","141","142"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Button/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/styles/global.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/routes/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/services/api.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/index.tsx",["143"],"import React, { useCallback, useRef } from 'react';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport { Link } from 'react-router-dom';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { Container, Content } from './styles';\n\ninterface ISignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ISignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        console.log(err);\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Erro na autenticação',\n            description:\n              'Ocorreu um erro ao fazer login, cheque as credenciais',\n          });\n        }\n      }\n    },\n    [signIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Entrar</h1>\n          <Input name=\"email\" type=\"text\" placeholder=\"E-mail\" />\n          <Input name=\"password\" type=\"password\" placeholder=\"Senha\" />\n          <Button color=\"primary\" type=\"submit\">\n            Entrar\n          </Button>\n        </Form>\n\n        <Link to=\"signup\">\n          <FiLogIn />\n          Criar conta\n        </Link>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/Input/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/Toast/index.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/SelectUserType/index.tsx",["144"],"import React, { useState } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiBookOpen, FiAward } from 'react-icons/fi';\nimport Button from '../../../components/Button';\nimport {\n  Container,\n  TypeCard,\n  Title,\n  CardsContainer,\n  CardTitle,\n} from './styles';\n\ninterface SelectUserTypeProps {\n  selected: 'student' | 'teacher' | '';\n  onChange(newUserType: 'student' | 'teacher' | ''): void;\n  onSubmit(): void;\n}\n\ninterface UserTypes {\n  title: string;\n  value: 'student' | 'teacher' | '';\n  icon: IconBaseProps;\n}\n\nconst SelectUserType: React.FC<SelectUserTypeProps> = ({\n  selected,\n  onChange,\n  onSubmit,\n}) => {\n  const [userTypes, setUserTypes] = useState<UserTypes[]>([\n    {\n      title: 'Professor',\n      value: 'teacher',\n      icon: <FiBookOpen size={70} />,\n    },\n    {\n      title: 'Aluno',\n      value: 'student',\n      icon: <FiAward size={70} />,\n    },\n  ]);\n\n  return (\n    <Container>\n      <Title>Escolha seu tipo de usuário</Title>\n      <CardsContainer>\n        {userTypes &&\n          userTypes.map(userType => (\n            <TypeCard\n              key={userType.value}\n              selected={selected === userType.value}\n              onClick={() => onChange(userType.value)}\n            >\n              <CardTitle>{userType.title}</CardTitle>\n              {userType.icon}\n            </TypeCard>\n          ))}\n      </CardsContainer>\n      <Button type=\"button\" onClick={onSubmit}>\n        Próximo\n      </Button>\n    </Container>\n  );\n};\n\nexport default SelectUserType;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/App.tsx",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignUp/index.tsx",["145","146"],"import React, { useCallback, useState, useRef } from 'react';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport SelectUserType from './SelectUserType';\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport { Container, FormContent } from './styles';\n\ntype SelectedUserType = 'teacher' | 'student' | '';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const [selectedUserType, setSelectedUserType] = useState<SelectedUserType>(\n    '',\n  );\n\n  const [userTypeSubmited, setUserTypeSubmited] = useState(false);\n\n  const handleSubmitUserType = useCallback(() => {\n    if (selectedUserType === '') {\n      addToast({\n        type: 'error',\n        title: 'Selecione um tipo de usuário',\n      });\n    } else {\n      setUserTypeSubmited(true);\n    }\n  }, [selectedUserType, addToast]);\n\n  const handleSelectAnotherUserType = useCallback(() => {\n    setUserTypeSubmited(false);\n    setSelectedUserType('');\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().min(6, 'No mínimo 6 digitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        console.log(selectedUserType);\n\n        await api.post('/users', {\n          ...data,\n          type: selectedUserType,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado',\n          description: 'Você já pode fazer seu logon no GoBarber',\n        });\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        } else {\n          addToast({\n            type: 'error',\n            title: 'Erro no cadastro',\n            description: err.error,\n          });\n        }\n      }\n    },\n    [addToast, history, selectedUserType],\n  );\n\n  const onChangeUserType = useCallback((newUserType: SelectedUserType) => {\n    setSelectedUserType(newUserType);\n  }, []);\n\n  return (\n    <Container>\n      {userTypeSubmited ? (\n        <FormContent>\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h2>Faça seu cadastro</h2>\n\n            <Input name=\"name\" type=\"text\" placeholder=\"Nome\" />\n\n            <Input name=\"email\" type=\"text\" placeholder=\"E-mail\" />\n\n            <Input name=\"password\" type=\"password\" placeholder=\"Senha\" />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <button type=\"button\" onClick={handleSelectAnotherUserType}>\n            <FiArrowLeft />\n            Escolher outro tipo de usuário\n          </button>\n        </FormContent>\n      ) : (\n        <SelectUserType\n          selected={selectedUserType}\n          onChange={onChangeUserType}\n          onSubmit={handleSubmitUserType}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/ToastContainer/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/OptionButton/index.tsx",["147","148"],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/components/OptionButton/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/pages/SignIn/styles.ts",[],"/home/gustavo/Área de Trabalho/Workspace/TAE/quiz-frontend/src/utils/getValidationErrors.ts",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":3,"column":25,"nodeType":"161","messageId":"162","endLine":3,"endColumn":57},{"ruleId":"149","replacedBy":"163"},{"ruleId":"151","replacedBy":"164"},{"ruleId":"153","replacedBy":"165"},{"ruleId":"155","replacedBy":"166"},{"ruleId":"157","replacedBy":"167"},{"ruleId":"149","replacedBy":"168"},{"ruleId":"151","replacedBy":"169"},{"ruleId":"153","replacedBy":"170"},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":8,"column":11,"nodeType":"175","messageId":"176","endLine":8,"endColumn":30},{"ruleId":"173","severity":1,"message":"177","line":33,"column":19,"nodeType":"175","messageId":"176","endLine":33,"endColumn":29},{"ruleId":"173","severity":1,"message":"178","line":5,"column":25,"nodeType":"175","messageId":"176","endLine":5,"endColumn":33},{"ruleId":"149","replacedBy":"179"},{"ruleId":"151","replacedBy":"180"},{"ruleId":"153","replacedBy":"181"},{"ruleId":"155","replacedBy":"182"},{"ruleId":"157","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":50,"column":9,"nodeType":"186","messageId":"187","endLine":50,"endColumn":20},{"ruleId":"173","severity":1,"message":"188","line":30,"column":21,"nodeType":"175","messageId":"176","endLine":30,"endColumn":33},{"ruleId":"173","severity":1,"message":"189","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":72,"column":9,"nodeType":"186","messageId":"187","endLine":72,"endColumn":20},{"ruleId":"173","severity":1,"message":"190","line":10,"column":3,"nodeType":"175","messageId":"176","endLine":10,"endColumn":5},{"ruleId":"173","severity":1,"message":"191","line":12,"column":3,"nodeType":"175","messageId":"176","endLine":12,"endColumn":11},"lines-around-directive",["192"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["192"],[],[],[],[],["192"],[],[],[],[],"@typescript-eslint/no-unused-vars","'selectedOptionProps' is defined but never used.","Identifier","unusedVar","'setOptions' is assigned a value but never used.","'useToast' is defined but never used.",["192"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","'setUserTypes' is assigned a value but never used.","'Link' is defined but never used.","'id' is defined but never used.","'children' is defined but never used.","padding-line-between-statements"]